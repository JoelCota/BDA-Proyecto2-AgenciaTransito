/**
 *
 * Apr 7, 2023 9:28:56 PM
 *
 */
package Presentacion;

import Dominio.Licencia;
import Dominio.Persona;
import Dominio.Placa;
import Persistencia.LicenciasDAO;
import Persistencia.PersonasDAO;
import Persistencia.PlacasDAO;
import Validadores.Validadores;
import excepciones.PersistenciaException;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import utilidades.EncriptadoCesar;

/**
 * Descripci√≥n de la clase: Clase que permite poder seleccionar las personas de
 * las cuales se desea consultar las placas y licencias.
 *
 * @author Joel Antonio Lopez Cota ID:228926 y David de Jesus Sotelo Palafox
 * ID:229384
 */
public class frmSeleccionPersonas extends javax.swing.JFrame {
    /**
     * Es el logger
     */
    private static final Logger LOG = Logger.getLogger(frmSeleccionPersonas.class.getName());
    /**
     * Es el elemento seleccionado en el comand box.
     */
    private Integer elementoSeleccionado;
    /**
     * Es la lista de las personas que tienen coincidencia con el parametro .
     */
    private List<Persona> listaPersonas;
    /**
     * Es el objeto para acceder a la clase encriptado cesar.
     */
    private EncriptadoCesar encriptador = new EncriptadoCesar();
    /**
     * Es el objeto para acceder a la clase personasDAO.
     */
    private PersonasDAO personasDAO;
    /**
     * Es el objeto para acceder a la clase placasDAO.
     */
    private PlacasDAO placasDAO;
     /**
     * Es el objeto para acceder a la clase licenciasDAO.
     */
    private LicenciasDAO licenciasDAO;
    /**
     * Es el largo de caracteres disponible en el campo de texto.
     */
    private int largo = 15;
    /**
     * Es la opcion del combo box.
     */
    private int opcion = 1;
    /**
     * Es el objeto para acceder a la clase validadores.
     */
    private Validadores validador = new Validadores();

    /**
     * Inicializa el frame.
     */
    public frmSeleccionPersonas() {
        initComponents();
        cargarOpcionesBusqueda();
        this.txtCampo.setEnabled(false);
        this.pnlTablas.setVisible(false);
        this.personasDAO = new PersonasDAO();
        this.licenciasDAO = new LicenciasDAO();
        this.placasDAO = new PlacasDAO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTitulo = new javax.swing.JPanel();
        txtSolicitarPlacas = new javax.swing.JLabel();
        pnlFondo = new javax.swing.JPanel();
        pnlComponentes = new javax.swing.JPanel();
        cbxTipoConsulta = new javax.swing.JComboBox<>();
        txtCampo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        pnlTablas = new javax.swing.JPanel();
        jScrollResultados = new javax.swing.JScrollPane();
        listaResultados = new javax.swing.JList<>();
        txtSeleccionados = new javax.swing.JLabel();
        btnContinuar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccion de busqueda");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlTitulo.setBackground(new java.awt.Color(117, 37, 37));
        pnlTitulo.setPreferredSize(new java.awt.Dimension(221, 66));

        txtSolicitarPlacas.setBackground(new java.awt.Color(0, 0, 0));
        txtSolicitarPlacas.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        txtSolicitarPlacas.setForeground(new java.awt.Color(0, 0, 0));
        txtSolicitarPlacas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSolicitarPlacas.setText("Consultas");

        javax.swing.GroupLayout pnlTituloLayout = new javax.swing.GroupLayout(pnlTitulo);
        pnlTitulo.setLayout(pnlTituloLayout);
        pnlTituloLayout.setHorizontalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSolicitarPlacas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        pnlTituloLayout.setVerticalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSolicitarPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pnlFondo.setBackground(new java.awt.Color(255, 255, 255));

        pnlComponentes.setBackground(new java.awt.Color(255, 204, 153));

        cbxTipoConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxTipoConsulta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTipoConsultaItemStateChanged(evt);
            }
        });
        cbxTipoConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoConsultaActionPerformed(evt);
            }
        });

        txtCampo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCampoKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        pnlTablas.setBackground(new java.awt.Color(255, 204, 153));

        listaResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaResultadosMouseClicked(evt);
            }
        });
        jScrollResultados.setViewportView(listaResultados);

        txtSeleccionados.setForeground(new java.awt.Color(0, 0, 0));
        txtSeleccionados.setText("Resultados");

        btnContinuar.setText("Continuar");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTablasLayout = new javax.swing.GroupLayout(pnlTablas);
        pnlTablas.setLayout(pnlTablasLayout);
        pnlTablasLayout.setHorizontalGroup(
            pnlTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTablasLayout.createSequentialGroup()
                        .addComponent(txtSeleccionados, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablasLayout.createSequentialGroup()
                        .addGroup(pnlTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlTablasLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnContinuar))
                            .addComponent(jScrollResultados, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
                        .addGap(16, 16, 16))))
        );
        pnlTablasLayout.setVerticalGroup(
            pnlTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablasLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtSeleccionados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnContinuar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlComponentesLayout = new javax.swing.GroupLayout(pnlComponentes);
        pnlComponentes.setLayout(pnlComponentesLayout);
        pnlComponentesLayout.setHorizontalGroup(
            pnlComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComponentesLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(pnlComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlComponentesLayout.createSequentialGroup()
                        .addComponent(cbxTipoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        pnlComponentesLayout.setVerticalGroup(
            pnlComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComponentesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxTipoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlComponentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscar)
                        .addComponent(txtCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFondoLayout = new javax.swing.GroupLayout(pnlFondo);
        pnlFondo.setLayout(pnlFondoLayout);
        pnlFondoLayout.setHorizontalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlComponentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlFondoLayout.setVerticalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlComponentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
            .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.generarPersonas();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void cbxTipoConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoConsultaActionPerformed
        if (this.cbxTipoConsulta.getSelectedItem() == "INDIQUE OPCION DE CONSULTA") {
            this.txtCampo.setEnabled(false);
        } else {
            this.txtCampo.setEnabled(true);
        }
    }//GEN-LAST:event_cbxTipoConsultaActionPerformed

    private void cbxTipoConsultaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTipoConsultaItemStateChanged
        this.gestionarTipo();
    }//GEN-LAST:event_cbxTipoConsultaItemStateChanged

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        this.continuarConsulta();
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void listaResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaResultadosMouseClicked
        elementoSeleccionado = this.listaResultados.getSelectedIndex();
    }//GEN-LAST:event_listaResultadosMouseClicked

    private void txtCampoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCampoKeyTyped
        this.cambioDeValidacion(evt);
    }//GEN-LAST:event_txtCampoKeyTyped


    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        new frmMenu().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new frmMenu().setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    /**
     *
     * Metodo para cargar la tabla de los resutados.
     *
     * @param personas Lista de personas
     */
    private void cargarTablaResultados(List<Persona> personas) {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (Persona persona : personas) {
            listModel.addElement(persona.toString());
        }
        this.listaResultados.setModel(listModel);
        this.listaResultados.revalidate();
        this.listaResultados.repaint();
    }

    /**
     * Metodo para cargar las opciones de busqueda.
     */
    private void cargarOpcionesBusqueda() {
        this.cbxTipoConsulta.removeAllItems();
        this.cbxTipoConsulta.addItem("INDIQUE OPCION DE CONSULTA");
        this.cbxTipoConsulta.addItem("RFC");
        this.cbxTipoConsulta.addItem("NOMBRE");
        this.cbxTipoConsulta.addItem("A√ëO NACIMIENTO");

    }

    /**
     * Metodo para generar las personas.
     */
    private void generarPersonas() {
        String opcion = this.cbxTipoConsulta.getModel().getSelectedItem().toString();
        if (this.txtCampo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un dato valido");

        } else {
            switch (opcion) {
                case "RFC": {
                    try {
                        Persona persona = personasDAO.buscarPersonaRFC(this.txtCampo.getText());
                        if (persona != null) {
                            listaPersonas = new ArrayList<>();
                            persona.setNombreCompleto(encriptador.getDesencriptado(persona.getNombreCompleto()));
                            listaPersonas.add(persona);
                            cargarTablaResultados(listaPersonas);
                            this.pnlTablas.setVisible(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "No se encontraron resultados\nVerifique los datos");
                        }
                    } catch (PersistenciaException ex) {
                        Logger.getLogger(frmSeleccionPersonas.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                break;
                case "NOMBRE":
                    listaPersonas = personasDAO.buscarPersonasPorNombre(encriptador.setEncriptado(this.txtCampo.getText()));
                    if (!listaPersonas.isEmpty()) {
                        for (Persona listaConsultada : listaPersonas) {
                            listaConsultada.setNombreCompleto(encriptador.getDesencriptado(listaConsultada.getNombreCompleto()));
                        }
                        cargarTablaResultados(listaPersonas);
                        this.pnlTablas.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se encontraron resultados");
                    }
                    break;
                case "A√ëO NACIMIENTO":
                    listaPersonas = personasDAO.buscarFecha(parseInt(this.txtCampo.getText()));
                    if (!listaPersonas.isEmpty()) {
                        for (Persona listaConsultada : listaPersonas) {
                            listaConsultada.setNombreCompleto(encriptador.getDesencriptado(listaConsultada.getNombreCompleto()));
                        }
                        cargarTablaResultados(listaPersonas);
                        this.pnlTablas.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "No se encontraron resultados");
                    }
                    break;
            }
        }
    }

    /**
     * Metodo apra gestionar el tipo seleccionado y en base a eso restringir el
     * campo de texto.
     */
    private void gestionarTipo() {
        try {
            switch (this.cbxTipoConsulta.getModel().getSelectedItem().toString()) {
                case "RFC":
                    largo = 15;
                    opcion = 1;
                    this.txtCampo.setText("");
                    this.pnlTablas.setVisible(false);
                    break;
                case "NOMBRE":
                    largo = 20;
                    opcion = 2;
                    this.txtCampo.setText("");
                    this.pnlTablas.setVisible(false);

                    break;
                case "A√ëO NACIMIENTO":
                    largo = 3;
                    opcion = 3;
                    this.txtCampo.setText("");
                    this.pnlTablas.setVisible(false);
                    break;
            }
        } catch (NullPointerException nul) {
            nul.getMessage();

        }
    }

    /**
     * Metodo para gestionar la consulta y cargar el frame
     */
    private void continuarConsulta() {
        if (elementoSeleccionado != null) {
            Persona persona = listaPersonas.get(elementoSeleccionado);
            List<Licencia> listaLicencias = licenciasDAO.listaLicencias(persona);
            List<Placa> listaPlacas = placasDAO.listaPlacas(persona);
            if (listaPlacas.isEmpty() && listaLicencias.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El cliente no cuenta con un historial");
            } else {
                new frmConsultas(listaLicencias, listaPlacas).setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado un elemento");
        }
    }

    /**
     * Metodo para gestionar la validacion depende la opcion seleccionada
     *
     * @param evt es el cambio en el combo box
     */
    private void cambioDeValidacion(java.awt.event.KeyEvent evt) {
        if (!(txtCampo.getText().length() > largo)) {
            switch (opcion) {
                case 1:
                    validador.validacionRFC(evt);
                    break;
                case 2:
                    validador.validacionCamposAlfabeto(evt);
                    break;
                default:
                    validador.validacionNumero(evt);
                    break;
            }
        } else {
            evt.consume();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JComboBox<String> cbxTipoConsulta;
    private javax.swing.JScrollPane jScrollResultados;
    private javax.swing.JList<String> listaResultados;
    private javax.swing.JPanel pnlComponentes;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlTablas;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JTextField txtCampo;
    private javax.swing.JLabel txtSeleccionados;
    private javax.swing.JLabel txtSolicitarPlacas;
    // End of variables declaration//GEN-END:variables

}

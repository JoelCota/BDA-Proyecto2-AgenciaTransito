/**
 * frmSolicitarPlacasAutoUsado.java
 * Apr 6, 2023 12:53:31 PM
 *
 */
package Presentacion;

import Dominio.Persona;
import Dominio.Placa;
import Persistencia.AutomovilesDAO;
import Persistencia.LicenciasDAO;
import Persistencia.PersonasDAO;
import Persistencia.PlacasDAO;
import Validadores.Validadores;
import excepciones.PersistenciaException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import utilidades.EncriptadoCesar;

/**
 *
 * Descripci√≥n de la clase: Clase de tipo frame para solicitar las placas de un
 * automovil usado.
 *
 * @author Joel Antonio Lopez Cota ID:228926 y David de Jesus Sotelo Palafox
 * ID:229384
 */
public class frmSolicitarPlacasAutoUsado extends javax.swing.JFrame {

    /**
     * Es la persona a la cual se le desea sacar la licencia.
     */
    private Persona personaProspecto;
    /**
     * Es el objeto para acceder a la clase personasDAO.
     */
    private PersonasDAO personasDAO;
    /**
     * Es el objeto para acceder a la clase licenciasDAO.
     */
    private LicenciasDAO licenciasDAO;
    /**
     * Es la vigencia de la licencia.
     */
    private Validadores validador = new Validadores();
    /**
     * Es el objeto para acceder a la clase encriptado cesar.
     */
    private EncriptadoCesar encriptador = new EncriptadoCesar();
    /**
     * Es el objeto para acceder a la clase placasDAO.
     */
    private PlacasDAO placasDAO;
    /**
     * Es el objeto para acceder a la clase automovilesDAO.
     */
    private AutomovilesDAO automovilesDAO;
    /**
     * Es el costo del tramite
     */
    private final float costo = 1000;
    /**
     * Es la placa a la cual se desea hacer el cambio
     */
    private Placa placaSolicitud;

    /**
     * Creates new form frmSolicitarPlacasAutoUsado.
     */
    public frmSolicitarPlacasAutoUsado() {
        initComponents();
        this.pnlPanelesInfo.setVisible(true);
        this.pnlInfoPlacas.setVisible(false);
        this.pnlInfoPersona.setVisible(false);
        this.personasDAO = new PersonasDAO();
        this.placasDAO = new PlacasDAO();
        this.automovilesDAO = new AutomovilesDAO();
        this.licenciasDAO = new LicenciasDAO();
        this.btnSolicitar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        pnlPrincipal = new javax.swing.JPanel();
        pnlInformacion = new javax.swing.JPanel();
        txtRFC = new javax.swing.JLabel();
        txtPlacas = new javax.swing.JLabel();
        txtCampoPlacas = new javax.swing.JTextField();
        txtCampoRFC = new javax.swing.JTextField();
        Separator1 = new javax.swing.JSeparator();
        btnSolicitar = new javax.swing.JButton();
        txtCostoPlacas = new javax.swing.JLabel();
        btnBorrarCampos = new javax.swing.JButton();
        btnBusquedaRFC = new javax.swing.JButton();
        btnBusquedaPlacas = new javax.swing.JButton();
        pnlPanelesInfo = new javax.swing.JPanel();
        pnlInfoPersona = new javax.swing.JPanel();
        txtRFCCliente = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JLabel();
        txtFechaCliente = new javax.swing.JLabel();
        txtNumeroCliente = new javax.swing.JLabel();
        txtSolicitarPlacas2 = new javax.swing.JLabel();
        pnlInfoPlacas = new javax.swing.JPanel();
        txtPropietario = new javax.swing.JLabel();
        txtModelo = new javax.swing.JLabel();
        txtLinea = new javax.swing.JLabel();
        txtColor = new javax.swing.JLabel();
        txtMarca = new javax.swing.JLabel();
        txtSolicitarPlacas1 = new javax.swing.JLabel();
        pnlTitulo = new javax.swing.JPanel();
        txtSolicitarPlacas = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setTitle("Solicitar Placas Auto Usado");
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        pnlInformacion.setBackground(new java.awt.Color(255, 204, 153));

        txtRFC.setText("RFC");
        txtRFC.setAutoscrolls(true);
        txtRFC.setForeground(new java.awt.Color(0, 0, 0));

        txtPlacas.setText("Placas");
        txtPlacas.setForeground(new java.awt.Color(0, 0, 0));

        txtCampoPlacas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCampoPlacas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampoPlacasActionPerformed(evt);
            }
        });
        txtCampoPlacas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCampoPlacasKeyTyped(evt);
            }
        });

        txtCampoRFC.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCampoRFC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCampoRFCMouseClicked(evt);
            }
        });
        txtCampoRFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampoRFCActionPerformed(evt);
            }
        });
        txtCampoRFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCampoRFCKeyTyped(evt);
            }
        });

        btnSolicitar.setText("Solicitar");
        btnSolicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarActionPerformed(evt);
            }
        });

        txtCostoPlacas.setText("Costo: 1000");
        txtCostoPlacas.setForeground(new java.awt.Color(0, 0, 0));

        btnBorrarCampos.setText("Borrar datos");
        btnBorrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCamposActionPerformed(evt);
            }
        });

        btnBusquedaRFC.setText("jButton1");
        btnBusquedaRFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaRFCActionPerformed(evt);
            }
        });

        btnBusquedaPlacas.setText("jButton1");
        btnBusquedaPlacas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaPlacasActionPerformed(evt);
            }
        });

        pnlPanelesInfo.setBackground(new java.awt.Color(255, 204, 153));

        pnlInfoPersona.setBackground(new java.awt.Color(255, 204, 153));

        txtRFCCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtRFCCliente.setMaximumSize(new java.awt.Dimension(0, 20));
        txtRFCCliente.setMinimumSize(new java.awt.Dimension(0, 20));
        txtRFCCliente.setPreferredSize(new java.awt.Dimension(10, 20));

        txtNombreCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtNombreCliente.setMaximumSize(new java.awt.Dimension(0, 20));
        txtNombreCliente.setMinimumSize(new java.awt.Dimension(0, 20));
        txtNombreCliente.setPreferredSize(new java.awt.Dimension(10, 20));

        txtFechaCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtFechaCliente.setMaximumSize(new java.awt.Dimension(0, 20));
        txtFechaCliente.setMinimumSize(new java.awt.Dimension(0, 20));
        txtFechaCliente.setPreferredSize(new java.awt.Dimension(10, 20));

        txtNumeroCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtNumeroCliente.setMaximumSize(new java.awt.Dimension(0, 20));
        txtNumeroCliente.setMinimumSize(new java.awt.Dimension(0, 20));
        txtNumeroCliente.setPreferredSize(new java.awt.Dimension(10, 20));

        txtSolicitarPlacas2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSolicitarPlacas2.setText("Informacion Cliente");
        txtSolicitarPlacas2.setBackground(new java.awt.Color(0, 0, 0));
        txtSolicitarPlacas2.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        txtSolicitarPlacas2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlInfoPersonaLayout = new javax.swing.GroupLayout(pnlInfoPersona);
        pnlInfoPersona.setLayout(pnlInfoPersonaLayout);
        pnlInfoPersonaLayout.setHorizontalGroup(
            pnlInfoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoPersonaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlInfoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSolicitarPlacas2)
                    .addGroup(pnlInfoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFechaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtRFCCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNumeroCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(350, Short.MAX_VALUE))
        );
        pnlInfoPersonaLayout.setVerticalGroup(
            pnlInfoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoPersonaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(txtSolicitarPlacas2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRFCCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFechaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNumeroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlInfoPlacas.setBackground(new java.awt.Color(255, 204, 153));

        txtPropietario.setForeground(new java.awt.Color(0, 0, 0));
        txtPropietario.setMaximumSize(new java.awt.Dimension(0, 20));
        txtPropietario.setMinimumSize(new java.awt.Dimension(0, 20));
        txtPropietario.setPreferredSize(new java.awt.Dimension(10, 20));

        txtModelo.setForeground(new java.awt.Color(0, 0, 0));
        txtModelo.setMaximumSize(new java.awt.Dimension(0, 20));
        txtModelo.setMinimumSize(new java.awt.Dimension(0, 20));
        txtModelo.setPreferredSize(new java.awt.Dimension(10, 20));

        txtLinea.setForeground(new java.awt.Color(0, 0, 0));
        txtLinea.setMaximumSize(new java.awt.Dimension(0, 20));
        txtLinea.setMinimumSize(new java.awt.Dimension(0, 20));
        txtLinea.setPreferredSize(new java.awt.Dimension(10, 20));

        txtColor.setForeground(new java.awt.Color(0, 0, 0));
        txtColor.setMaximumSize(new java.awt.Dimension(0, 20));
        txtColor.setMinimumSize(new java.awt.Dimension(0, 20));
        txtColor.setPreferredSize(new java.awt.Dimension(10, 20));

        txtMarca.setForeground(new java.awt.Color(0, 0, 0));
        txtMarca.setMaximumSize(new java.awt.Dimension(0, 20));
        txtMarca.setMinimumSize(new java.awt.Dimension(0, 20));
        txtMarca.setPreferredSize(new java.awt.Dimension(10, 20));

        txtSolicitarPlacas1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSolicitarPlacas1.setText("Informacion Placa");
        txtSolicitarPlacas1.setBackground(new java.awt.Color(0, 0, 0));
        txtSolicitarPlacas1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        txtSolicitarPlacas1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlInfoPlacasLayout = new javax.swing.GroupLayout(pnlInfoPlacas);
        pnlInfoPlacas.setLayout(pnlInfoPlacasLayout);
        pnlInfoPlacasLayout.setHorizontalGroup(
            pnlInfoPlacasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoPlacasLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlInfoPlacasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSolicitarPlacas1)
                    .addGroup(pnlInfoPlacasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtLinea, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                        .addComponent(txtColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlInfoPlacasLayout.setVerticalGroup(
            pnlInfoPlacasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoPlacasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSolicitarPlacas1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout pnlPanelesInfoLayout = new javax.swing.GroupLayout(pnlPanelesInfo);
        pnlPanelesInfo.setLayout(pnlPanelesInfoLayout);
        pnlPanelesInfoLayout.setHorizontalGroup(
            pnlPanelesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelesInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPanelesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlInfoPlacas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInfoPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPanelesInfoLayout.setVerticalGroup(
            pnlPanelesInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelesInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInfoPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInfoPlacas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout pnlInformacionLayout = new javax.swing.GroupLayout(pnlInformacion);
        pnlInformacion.setLayout(pnlInformacionLayout);
        pnlInformacionLayout.setHorizontalGroup(
            pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformacionLayout.createSequentialGroup()
                .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformacionLayout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRFC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPlacas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInformacionLayout.createSequentialGroup()
                                .addComponent(txtCampoPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBusquedaPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInformacionLayout.createSequentialGroup()
                                .addComponent(txtCampoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBusquedaRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52))
                    .addGroup(pnlInformacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtCostoPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(pnlPanelesInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlInformacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176)
                .addComponent(btnBorrarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(pnlInformacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Separator1)
                .addContainerGap())
        );
        pnlInformacionLayout.setVerticalGroup(
            pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformacionLayout.createSequentialGroup()
                .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformacionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlPanelesInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlInformacionLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRFC)
                            .addComponent(txtCampoRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBusquedaRFC))
                        .addGap(49, 49, 49)
                        .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPlacas)
                            .addComponent(txtCampoPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBusquedaPlacas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCostoPlacas)
                        .addGap(18, 18, 18)))
                .addComponent(Separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInformacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        pnlTitulo.setBackground(new java.awt.Color(117, 37, 37));
        pnlTitulo.setPreferredSize(new java.awt.Dimension(221, 66));

        txtSolicitarPlacas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtSolicitarPlacas.setText("Solicitar Placas");
        txtSolicitarPlacas.setBackground(new java.awt.Color(0, 0, 0));
        txtSolicitarPlacas.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        txtSolicitarPlacas.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlTituloLayout = new javax.swing.GroupLayout(pnlTitulo);
        pnlTitulo.setLayout(pnlTituloLayout);
        pnlTituloLayout.setHorizontalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSolicitarPlacas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        pnlTituloLayout.setVerticalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtSolicitarPlacas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(pnlInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlInformacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCampoPlacasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampoPlacasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampoPlacasActionPerformed

    private void txtCampoRFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampoRFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampoRFCActionPerformed

    private void txtCampoRFCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCampoRFCMouseClicked

    }//GEN-LAST:event_txtCampoRFCMouseClicked

    private void txtCampoRFCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCampoRFCKeyTyped
        if (!(txtCampoRFC.getText().length() > 12)) {
            validador.validacionRFC(evt);
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_txtCampoRFCKeyTyped

    private void btnBusquedaRFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaRFCActionPerformed
        this.busquedaRFC();
    }//GEN-LAST:event_btnBusquedaRFCActionPerformed

    private void btnBusquedaPlacasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaPlacasActionPerformed
        this.busquedaPlacas();
    }//GEN-LAST:event_btnBusquedaPlacasActionPerformed

    private void btnSolicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarActionPerformed
        generarCambiosPlacas();
    }//GEN-LAST:event_btnSolicitarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new frmMenu().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void txtCampoPlacasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCampoPlacasKeyTyped
        if (!(this.txtCampoPlacas.getText().length() > 6)) {
            validador.validacionCamposSerie(evt);
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_txtCampoPlacasKeyTyped

    private void btnBorrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCamposActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_btnBorrarCamposActionPerformed

    /**
     *
     * Metodo que ayuda a setear la informacion de la persona.
     *
     * @param persona objeto persona.
     */
    private void setearInfoPersona(Persona persona) {
        this.pnlInfoPersona.setVisible(true);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        this.txtRFCCliente.setText("RFC: " + persona.getRFC());
        this.txtNombreCliente.setText("Nombre: " + persona.getNombreCompleto());
        this.txtFechaCliente.setText("Fecha Nacimiento: " + sdf.format(persona.getFechaNacimiento().getTime()));
        this.txtNumeroCliente.setText("Numero Telefono: " + persona.getTelefono());
    }

    /**
     *
     * Metodo para setear la informacion de la placa.
     *
     * @param placa objeto tipo placa.
     */
    private void setearInfoPlaca(Placa placa) {
        this.pnlInfoPlacas.setVisible(true);
        this.txtPropietario.setText("Propietario: " + placa.getPersona().getNombreCompleto());
        this.txtModelo.setText("Modelo: " + placa.getTransporte().getModelo());
        this.txtLinea.setText("Linea: " + placa.getTransporte().getLinea());
        this.txtColor.setText("Color: " + placa.getTransporte().getColor());
        this.txtMarca.setText("Marca: " + placa.getTransporte().getMarca());
    }

    /**
     *
     * Metodo para generar el numero de serie.
     *
     * @return el String del numero de serie.
     */
    public String generarNumeroSerie() {
        StringBuilder numeroSerie = new StringBuilder();
        Random random = new Random();
        String letras = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        for (int i = 0; i < 3; i++) {
            char letra = letras.charAt(random.nextInt(letras.length()));
            numeroSerie.append(letra);
        }
        numeroSerie.append("-");
        for (int i = 0; i < 3; i++) {
            int numero = random.nextInt(10);
            numeroSerie.append(numero);
        }
        return numeroSerie.toString();
    }

    /**
     * Metodo para generar la actualizacion de placas del carro.
     */
    private void generarCambiosPlacas() {

        try {
            placaSolicitud.setNumeroPlaca(generarNumeroSerie());
            placaSolicitud.setCosto(costo);
            placasDAO.actualizar(placaSolicitud);
            JOptionPane.showMessageDialog(this, "Se ha generado el cambio de placa\nNueva Placa: "
                    + "" + placaSolicitud.getNumeroPlaca() + "\nCosto: $" + placaSolicitud.getCosto());
            lanzarConfirmacion();
        } catch (PersistenciaException ex) {
            Logger.getLogger(frmSolicitarPlacasAutoUsado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Metodo para realizar la busqueda de la licencia con el RFC.
     */
    private void busquedaRFC() {
        if (this.txtCampoRFC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un RFC valido");
        } else {
            try {
                if (licenciasDAO.buscarLicenciaPersona(personasDAO.buscarPersonaRFC(txtCampoRFC.getText())) != null) {
                    personaProspecto = personasDAO.buscarPersonaRFC(this.txtCampoRFC.getText());
                    personaProspecto.setNombreCompleto(encriptador.getDesencriptado(personaProspecto.getNombreCompleto()));
                    setearInfoPersona(personaProspecto);
                    if (this.pnlInfoPlacas.isVisible()) {
                        this.btnSolicitar.setEnabled(true);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El cliente no cuenta con una licencia valida");
                }
            } catch (PersistenciaException ex) {
                JOptionPane.showMessageDialog(this, "El cliente no cuenta con una licencia valida");
            }
        }
    }

    /**
     * Metodo para lanzar confirmacion.
     */
    private void lanzarConfirmacion() {
        int respuesta = JOptionPane.showOptionDialog(null, "¬øDeseas realizar otro?", "Confirmaci√≥n",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (respuesta == JOptionPane.YES_OPTION) {
            limpiarCampos();
        } else {
            new frmMenu().setVisible(true);
            this.setVisible(false);
        }
    }

    /**
     * Metodo para realizar la busqueda por las placas.
     */
    private void busquedaPlacas() {
        if (this.txtCampoPlacas.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese una placa valido");
        } else {
            if (placasDAO.buscarPersonaSerie(txtCampoPlacas.getText()) != null) {
                placaSolicitud = placasDAO.buscarPersonaSerie(txtCampoPlacas.getText());
                placaSolicitud.getPersona().setNombreCompleto(encriptador.getDesencriptado(placaSolicitud.getPersona().getNombreCompleto()));
                setearInfoPlaca(placaSolicitud);
                if (this.pnlInfoPersona.isVisible()) {
                    this.btnSolicitar.setEnabled(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "La placa no existe\nEl formato de placa es:\nAAA-111");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Separator1;
    private javax.swing.JButton btnBorrarCampos;
    private javax.swing.JButton btnBusquedaPlacas;
    private javax.swing.JButton btnBusquedaRFC;
    private javax.swing.JButton btnSolicitar;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JPanel pnlInfoPersona;
    private javax.swing.JPanel pnlInfoPlacas;
    private javax.swing.JPanel pnlInformacion;
    private javax.swing.JPanel pnlPanelesInfo;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JTextField txtCampoPlacas;
    private javax.swing.JTextField txtCampoRFC;
    private javax.swing.JLabel txtColor;
    private javax.swing.JLabel txtCostoPlacas;
    private javax.swing.JLabel txtFechaCliente;
    private javax.swing.JLabel txtLinea;
    private javax.swing.JLabel txtMarca;
    private javax.swing.JLabel txtModelo;
    private javax.swing.JLabel txtNombreCliente;
    private javax.swing.JLabel txtNumeroCliente;
    private javax.swing.JLabel txtPlacas;
    private javax.swing.JLabel txtPropietario;
    private javax.swing.JLabel txtRFC;
    private javax.swing.JLabel txtRFCCliente;
    private javax.swing.JLabel txtSolicitarPlacas;
    private javax.swing.JLabel txtSolicitarPlacas1;
    private javax.swing.JLabel txtSolicitarPlacas2;
    // End of variables declaration//GEN-END:variables
    /**
     * Metodo que limpia todos los datos.
     */
    private void limpiarCampos() {
        this.txtCampoPlacas.setText("");
        this.txtCampoRFC.setText("");
        this.pnlInfoPersona.setVisible(false);
        this.pnlInfoPlacas.setVisible(false);
        this.btnSolicitar.setEnabled(false);
    }

}
